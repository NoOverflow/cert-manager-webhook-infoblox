apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: YOUR_EMAIL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-account-key
    solvers:
    - dns01:
        webhook:
          groupName: GROUP_NAME
          solverName: infoblox
          config:
            host: INFOBLOX_ADDRESS
            view: INFOBLOX_VIEW
            usernameSecretRef:
              name: CREDENTIAL_SECRET_NAME
              key: username
            passwordSecretRef:
              name: CREDENTIAL_SECRET_NAME
              key: password

---
apiVersion: v1
kind: Secret
metadata:
  name: CREDENTIAL_SECRET_NAME
  namespace: cert-manager
type: Opaque
data:
  username: dXNlcm5hbWUK # base64 encoded string "username"
  password: cGFzc3dvcmQK # base64 encoded string "password"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-infoblox:secret-reader
  namespace: cert-manager
rules:
  - apiGroups: [""]
    resources:
      - secrets
    resourceNames:
      - CREDENTIAL_SECRET_NAME
    verbs:
      - get
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhook-infoblox:secret-reader
  namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-infoblox:secret-reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: webhook-infoblox
    namespace: cert-manager
